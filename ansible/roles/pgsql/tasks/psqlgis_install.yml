# vi: set sw=2 ts=2:
# Installs and configures the PostgreSQL (with PostGIS) database
---

- name: PostgreSQL+GIS | Add PostgreSQL Repository
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main' state=present

- name: PostgreSQL+GIS | Add Keys for PostgreSQL Repository
  apt_key: url=http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc state=present

- name: PostgreSQL+GIS | Update apt
  sudo: yes
  apt: update_cache=yes

- name: PostgreSQL+GIS | Install PostgreSQL
  apt: pkg=postgresql-9.3 state=present force=yes

- name: PostgreSQL+GIS | Start postgresql server
  service: name=postgresql state=started enabled=yes

- name: PostgreSQL+GIS | Install PostgreSQL Packages
  sudo: yes
  apt: >
    pkg={{item}}
    state=installed
    update-cache=yes
  with_items:
    - python-pygresql
    - build-essential
    - python-dev
    - python-setuptools
    - python-psycopg2
    - postgresql-contrib-9.3
    - postgresql-9.3-postgis-2.1
    - postgresql-client
    - postgresql-client-common
    - libpq-dev

- name: PostgreSQL+GIS | Ensure template_postgis database exists
  sudo_user: postgres
  postgresql_db: name=template_postgis state=present
  register: createdb_template_postgis

- name: PostgreSQL+GIS | Make template_postgis a template
  sudo_user: postgres
  command: psql -d template_postgis -c "UPDATE pg_database SET datistemplate=true WHERE datname='template_postgis';"
  when: createdb_template_postgis.changed

- name: PostgreSQL+GIS | Enable postgis extension
  sudo_user: postgres
  command: psql -d template_postgis -c "CREATE EXTENSION postgis;"
  when: createdb_template_postgis.changed

